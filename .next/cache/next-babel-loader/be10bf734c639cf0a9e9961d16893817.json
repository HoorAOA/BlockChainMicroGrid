{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport Layout from '../../components/Layout';\nimport { Form, Button, Input, Message } from 'semantic-ui-react';\nimport factory from '../../ethereum/factory';\nimport web3 from '../../ethereum/web3';\nimport { Router } from '../../routes'; // import Router from 'next/router'\n\nclass ExchangeNew extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      PowerUnits: '',\n      Price: '',\n      errorMessage: '',\n      loading: false\n    });\n\n    _defineProperty(this, \"onSubmit\", async event => {\n      event.preventDefault();\n      this.setState({\n        loading: true,\n        errorMessage: ''\n      });\n\n      try {\n        await ethereum.enable();\n        const accounts = await web3.eth.getAccounts();\n        await factory.methods.createExchange(this.state.PowerUnits, this.state.Price).send({\n          from: accounts[0]\n        });\n        Router.pushRoute('/Exchanges/MyExchanges');\n      } catch (err) {\n        this.setState({\n          errorMessage: err.message\n        });\n      } finally {\n        this.setState({\n          loading: false\n        });\n      }\n    });\n  }\n\n  render() {\n    return __jsx(Layout, null, __jsx(\"h2\", null, \"Create New Exchange\"), __jsx(Form, {\n      onSubmit: this.onSubmit,\n      error: !!this.state.errorMessage\n    }, __jsx(Form.Field, null, __jsx(\"label\", null, \"Power Units\"), __jsx(Input, {\n      label: \"Kw\",\n      labelPosition: \"right\",\n      value: this.state.PowerUnits,\n      onChange: event => this.setState({\n        PowerUnits: event.target.value\n      })\n    })), __jsx(Form.Field, null, __jsx(\"label\", null, \"Price\"), __jsx(Input, {\n      label: \"SDG\",\n      labelPosition: \"right\",\n      value: this.state.Price,\n      onChange: event => this.setState({\n        Price: event.target.value\n      })\n    })), __jsx(Message, {\n      error: true,\n      header: \"Oops!\",\n      content: this.state.errorMessage\n    }), __jsx(Button, {\n      loading: this.state.loading,\n      primary: true\n    }, \"Create\")));\n  }\n\n}\n\nexport default ExchangeNew;","map":{"version":3,"sources":["C:/Users/toshiba/Desktop/BlockChainMicroGrid/pages/Exchanges/new.js"],"names":["React","Component","Layout","Form","Button","Input","Message","factory","web3","Router","ExchangeNew","PowerUnits","Price","errorMessage","loading","event","preventDefault","setState","ethereum","enable","accounts","eth","getAccounts","methods","createExchange","state","send","from","pushRoute","err","message","render","onSubmit","target","value"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,SAAQC,IAAR,EAAcC,MAAd,EAAsBC,KAAtB,EAA6BC,OAA7B,QAA2C,mBAA3C;AACA,OAAOC,OAAP,MAAoB,wBAApB;AACA,OAAOC,IAAP,MAAiB,qBAAjB;AACA,SAASC,MAAT,QAAuB,cAAvB,C,CACA;;AAEA,MAAMC,WAAN,SAA0BT,SAA1B,CAAoC;AAAA;AAAA;;AAAA,mCACxB;AACJU,MAAAA,UAAU,EAAE,EADR;AAEJC,MAAAA,KAAK,EAAE,EAFH;AAGJC,MAAAA,YAAY,EAAE,EAHV;AAIJC,MAAAA,OAAO,EAAE;AAJL,KADwB;;AAAA,sCAQrB,MAAMC,KAAN,IAAe;AACtBA,MAAAA,KAAK,CAACC,cAAN;AAEA,WAAKC,QAAL,CAAc;AAACH,QAAAA,OAAO,EAAE,IAAV;AAAgBD,QAAAA,YAAY,EAAC;AAA7B,OAAd;;AACA,UAAG;AACC,cAAMK,QAAQ,CAACC,MAAT,EAAN;AACA,cAAMC,QAAQ,GAAG,MAAMZ,IAAI,CAACa,GAAL,CAASC,WAAT,EAAvB;AACA,cAAMf,OAAO,CAACgB,OAAR,CACDC,cADC,CACc,KAAKC,KAAL,CAAWd,UADzB,EACqC,KAAKc,KAAL,CAAWb,KADhD,EAEDc,IAFC,CAEI;AAAEC,UAAAA,IAAI,EAAEP,QAAQ,CAAC,CAAD;AAAhB,SAFJ,CAAN;AAIAX,QAAAA,MAAM,CAACmB,SAAP,CAAiB,wBAAjB;AAEH,OATD,CAUA,OAAMC,GAAN,EACA;AACI,aAAKZ,QAAL,CAAc;AAACJ,UAAAA,YAAY,EAAEgB,GAAG,CAACC;AAAnB,SAAd;AACH,OAbD,SAaU;AAEN,aAAKb,QAAL,CAAc;AAACH,UAAAA,OAAO,EAAE;AAAV,SAAd;AAEH;AACJ,KA9B+B;AAAA;;AAgChCiB,EAAAA,MAAM,GAAG;AACL,WACI,MAAC,MAAD,QACI,wCADJ,EAEI,MAAC,IAAD;AAAM,MAAA,QAAQ,EAAE,KAAKC,QAArB;AAA+B,MAAA,KAAK,EAAE,CAAC,CAAC,KAAKP,KAAL,CAAWZ;AAAnD,OACI,MAAC,IAAD,CAAM,KAAN,QACI,mCADJ,EAEI,MAAC,KAAD;AACI,MAAA,KAAK,EAAC,IADV;AAEI,MAAA,aAAa,EAAC,OAFlB;AAGI,MAAA,KAAK,EAAE,KAAKY,KAAL,CAAWd,UAHtB;AAII,MAAA,QAAQ,EAAEI,KAAK,IACX,KAAKE,QAAL,CAAc;AAAEN,QAAAA,UAAU,EAAEI,KAAK,CAACkB,MAAN,CAAaC;AAA3B,OAAd;AALR,MAFJ,CADJ,EAWI,MAAC,IAAD,CAAM,KAAN,QACI,6BADJ,EAEI,MAAC,KAAD;AACI,MAAA,KAAK,EAAC,KADV;AAEI,MAAA,aAAa,EAAC,OAFlB;AAGI,MAAA,KAAK,EAAE,KAAKT,KAAL,CAAWb,KAHtB;AAII,MAAA,QAAQ,EAAEG,KAAK,IACX,KAAKE,QAAL,CAAc;AAAEL,QAAAA,KAAK,EAAEG,KAAK,CAACkB,MAAN,CAAaC;AAAtB,OAAd;AALR,MAFJ,CAXJ,EAqBI,MAAC,OAAD;AAAS,MAAA,KAAK,MAAd;AAAe,MAAA,MAAM,EAAC,OAAtB;AAA8B,MAAA,OAAO,EAAE,KAAKT,KAAL,CAAWZ;AAAlD,MArBJ,EAsBI,MAAC,MAAD;AAAQ,MAAA,OAAO,EAAE,KAAKY,KAAL,CAAWX,OAA5B;AAAqC,MAAA,OAAO;AAA5C,gBAtBJ,CAFJ,CADJ;AA6BH;;AA9D+B;;AAiEpC,eAAeJ,WAAf","sourcesContent":["import React, {Component} from 'react';\r\nimport Layout from '../../components/Layout';\r\nimport {Form, Button, Input, Message} from 'semantic-ui-react';\r\nimport factory from '../../ethereum/factory';\r\nimport web3 from '../../ethereum/web3';\r\nimport { Router } from '../../routes';\r\n// import Router from 'next/router'\r\n\r\nclass ExchangeNew extends Component {\r\n    state = {\r\n        PowerUnits: '',\r\n        Price: '',\r\n        errorMessage: '',\r\n        loading: false\r\n    };\r\n    \r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        this.setState({loading: true, errorMessage:''});\r\n        try{\r\n            await ethereum.enable();\r\n            const accounts = await web3.eth.getAccounts();\r\n            await factory.methods\r\n                .createExchange(this.state.PowerUnits, this.state.Price)\r\n                .send({ from: accounts[0]});\r\n            \r\n            Router.pushRoute('/Exchanges/MyExchanges');\r\n\r\n        }\r\n        catch(err)\r\n        {\r\n            this.setState({errorMessage: err.message});\r\n        } finally { \r\n\r\n            this.setState({loading: false});\r\n           \r\n        }\r\n    };\r\n\r\n    render() {\r\n        return(\r\n            <Layout>\r\n                <h2>Create New Exchange</h2>\r\n                <Form onSubmit={this.onSubmit} error={!!this.state.errorMessage}>\r\n                    <Form.Field>\r\n                        <label>Power Units</label>\r\n                        <Input \r\n                            label=\"Kw\" \r\n                            labelPosition=\"right\"\r\n                            value={this.state.PowerUnits}\r\n                            onChange={event => \r\n                                this.setState({ PowerUnits: event.target.value })}/>\r\n                    </Form.Field>\r\n\r\n                    <Form.Field>\r\n                        <label>Price</label>\r\n                        <Input \r\n                            label=\"SDG\" \r\n                            labelPosition=\"right\"\r\n                            value={this.state.Price}\r\n                            onChange={event => \r\n                                this.setState({ Price: event.target.value })}/>\r\n                    </Form.Field>\r\n\r\n                    <Message error header=\"Oops!\" content={this.state.errorMessage} />\r\n                    <Button loading={this.state.loading} primary>Create</Button>\r\n                </Form>\r\n            </Layout>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ExchangeNew;"]},"metadata":{},"sourceType":"module"}