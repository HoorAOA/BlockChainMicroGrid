{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport { Card } from 'semantic-ui-react';\nimport Layout from '../../components/Layout';\nimport Campaign from '../../ethereum/campaign';\nimport web3 from '../../ethereum/web3';\n\nclass CampaignShow extends Component {\n  static async getInitialProps(props) {\n    const campaign = Campaign(props.query.address);\n    const summary = await campaign.methods.getSummary().call(); // console.log(summary);\n    // console.log(props.query.address);\n\n    return {\n      minimumContribution: summary[0],\n      balance: summary[1],\n      requestCount: summary[2],\n      approversCount: summary[3],\n      manager: summary[4]\n    };\n  }\n\n  renderCards() {\n    const {\n      balance,\n      manager,\n      minimumContribution,\n      requestCount,\n      approversCount\n    } = this.props;\n    const items = [{\n      header: manager,\n      meta: 'Manager Address ',\n      description: 'The manager created this campaign and can request money',\n      style: {\n        overflowWrap: 'break-word'\n      }\n    }, {\n      header: minimumContribution,\n      meta: 'Minimum Contribution (wei) ',\n      description: 'You must contribute at least this much to be ana approver',\n      style: {\n        overflowWrap: 'break-word'\n      }\n    }, {\n      header: requestCount,\n      meta: 'Number of requests ',\n      description: 'Request to take permission from the approvers to spend money',\n      style: {\n        overflowWrap: 'break-word'\n      }\n    }, {\n      header: approversCount,\n      meta: 'Number of approvers ',\n      description: 'Number of contributers who donated money a approved the spending request',\n      style: {\n        overflowWrap: 'break-word'\n      }\n    }, {\n      header: web3.utils.fromWei(balance, 'ether'),\n      meta: 'Campaign balance (ether) ',\n      description: 'How much money this campaign collected',\n      style: {\n        overflowWrap: 'break-word'\n      }\n    }];\n    return __jsx(Card.Group, {\n      items: items\n    });\n  }\n\n  render() {\n    return __jsx(Layout, null, __jsx(\"h3\", null, \"Campaign Show\"), this.renderCards());\n  }\n\n}\n\nexport default CampaignShow;","map":{"version":3,"sources":["C:/Users/toshiba/Desktop/kickstart/pages/campaigns/show.js"],"names":["React","Component","Card","Layout","Campaign","web3","CampaignShow","getInitialProps","props","campaign","query","address","summary","methods","getSummary","call","minimumContribution","balance","requestCount","approversCount","manager","renderCards","items","header","meta","description","style","overflowWrap","utils","fromWei","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,QAAqB,mBAArB;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,OAAOC,QAAP,MAAqB,yBAArB;AACA,OAAOC,IAAP,MAAiB,qBAAjB;;AAEA,MAAMC,YAAN,SAA2BL,SAA3B,CAAqC;AACjC,eAAaM,eAAb,CAA6BC,KAA7B,EAAoC;AAChC,UAAMC,QAAQ,GAAGL,QAAQ,CAACI,KAAK,CAACE,KAAN,CAAYC,OAAb,CAAzB;AACA,UAAMC,OAAO,GAAG,MAAMH,QAAQ,CAACI,OAAT,CAAiBC,UAAjB,GAA8BC,IAA9B,EAAtB,CAFgC,CAGhC;AACA;;AAEA,WAAO;AACHC,MAAAA,mBAAmB,EAAEJ,OAAO,CAAC,CAAD,CADzB;AAEHK,MAAAA,OAAO,EAAEL,OAAO,CAAC,CAAD,CAFb;AAGHM,MAAAA,YAAY,EAAEN,OAAO,CAAC,CAAD,CAHlB;AAIHO,MAAAA,cAAc,EAAEP,OAAO,CAAC,CAAD,CAJpB;AAKHQ,MAAAA,OAAO,EAAER,OAAO,CAAC,CAAD;AALb,KAAP;AAOH;;AAEDS,EAAAA,WAAW,GAAG;AACV,UAAK;AACDJ,MAAAA,OADC;AAEDG,MAAAA,OAFC;AAGDJ,MAAAA,mBAHC;AAIDE,MAAAA,YAJC;AAKDC,MAAAA;AALC,QAMD,KAAKX,KANT;AAQA,UAAMc,KAAK,GAAG,CACV;AACIC,MAAAA,MAAM,EAAEH,OADZ;AAEII,MAAAA,IAAI,EAAE,kBAFV;AAGIC,MAAAA,WAAW,EAAE,yDAHjB;AAIIC,MAAAA,KAAK,EAAE;AAACC,QAAAA,YAAY,EAAE;AAAf;AAJX,KADU,EAOV;AACIJ,MAAAA,MAAM,EAAEP,mBADZ;AAEIQ,MAAAA,IAAI,EAAE,6BAFV;AAGIC,MAAAA,WAAW,EAAE,2DAHjB;AAIIC,MAAAA,KAAK,EAAE;AAACC,QAAAA,YAAY,EAAE;AAAf;AAJX,KAPU,EAaV;AACIJ,MAAAA,MAAM,EAAEL,YADZ;AAEIM,MAAAA,IAAI,EAAE,qBAFV;AAGIC,MAAAA,WAAW,EAAE,8DAHjB;AAIIC,MAAAA,KAAK,EAAE;AAACC,QAAAA,YAAY,EAAE;AAAf;AAJX,KAbU,EAmBV;AACIJ,MAAAA,MAAM,EAAEJ,cADZ;AAEIK,MAAAA,IAAI,EAAE,sBAFV;AAGIC,MAAAA,WAAW,EAAE,0EAHjB;AAIIC,MAAAA,KAAK,EAAE;AAACC,QAAAA,YAAY,EAAE;AAAf;AAJX,KAnBU,EAyBV;AACIJ,MAAAA,MAAM,EAAElB,IAAI,CAACuB,KAAL,CAAWC,OAAX,CAAmBZ,OAAnB,EAA4B,OAA5B,CADZ;AAEIO,MAAAA,IAAI,EAAE,2BAFV;AAGIC,MAAAA,WAAW,EAAE,wCAHjB;AAIIC,MAAAA,KAAK,EAAE;AAACC,QAAAA,YAAY,EAAE;AAAf;AAJX,KAzBU,CAAd;AAiCA,WAAO,MAAC,IAAD,CAAM,KAAN;AAAY,MAAA,KAAK,EAAEL;AAAnB,MAAP;AACH;;AAEDQ,EAAAA,MAAM,GAAE;AACJ,WACI,MAAC,MAAD,QACI,kCADJ,EAEK,KAAKT,WAAL,EAFL,CADJ;AAMH;;AApEgC;;AAuErC,eAAef,YAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport { Card } from 'semantic-ui-react'; \r\nimport Layout from '../../components/Layout';\r\nimport Campaign from '../../ethereum/campaign';\r\nimport web3 from '../../ethereum/web3';\r\n\r\nclass CampaignShow extends Component {\r\n    static async getInitialProps(props) {\r\n        const campaign = Campaign(props.query.address);\r\n        const summary = await campaign.methods.getSummary().call();\r\n        // console.log(summary);\r\n        // console.log(props.query.address);\r\n\r\n        return {\r\n            minimumContribution: summary[0],\r\n            balance: summary[1],\r\n            requestCount: summary[2],\r\n            approversCount: summary[3],\r\n            manager: summary[4]\r\n        };\r\n    }\r\n\r\n    renderCards() {\r\n        const{\r\n            balance,\r\n            manager,\r\n            minimumContribution,\r\n            requestCount,\r\n            approversCount\r\n        } = this.props;\r\n\r\n        const items = [\r\n            {\r\n                header: manager,\r\n                meta: 'Manager Address ',\r\n                description: 'The manager created this campaign and can request money',\r\n                style: {overflowWrap: 'break-word'}\r\n            },\r\n            {\r\n                header: minimumContribution,\r\n                meta: 'Minimum Contribution (wei) ',\r\n                description: 'You must contribute at least this much to be ana approver',\r\n                style: {overflowWrap: 'break-word'}\r\n            },\r\n            {\r\n                header: requestCount,\r\n                meta: 'Number of requests ',\r\n                description: 'Request to take permission from the approvers to spend money',\r\n                style: {overflowWrap: 'break-word'}\r\n            },\r\n            {\r\n                header: approversCount,\r\n                meta: 'Number of approvers ',\r\n                description: 'Number of contributers who donated money a approved the spending request',\r\n                style: {overflowWrap: 'break-word'}\r\n            },\r\n            {\r\n                header: web3.utils.fromWei(balance, 'ether'),\r\n                meta: 'Campaign balance (ether) ',\r\n                description: 'How much money this campaign collected',\r\n                style: {overflowWrap: 'break-word'}\r\n            }\r\n        ];\r\n\r\n        return <Card.Group items={items}/>\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <Layout>\r\n                <h3>Campaign Show</h3>\r\n                {this.renderCards()}\r\n            </Layout>\r\n        );\r\n    }\r\n}         \r\n\r\nexport default CampaignShow;"]},"metadata":{},"sourceType":"module"}