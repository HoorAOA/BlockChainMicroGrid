{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _readOnlyError from \"@babel/runtime/helpers/esm/readOnlyError\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport Layout from '../../components/Layout';\nimport { Form, Button, Input, Message, Divider } from 'semantic-ui-react';\nimport Exchange from '../../ethereum/exchange';\nimport web3 from '../../ethereum/web3';\nimport { Router } from '../../routes';\nimport factory from '../../ethereum/factory'; // import Router from 'next/router'\n\nvar ExchangeNew = /*#__PURE__*/function (_Component) {\n  _inherits(ExchangeNew, _Component);\n\n  var _super = _createSuper(ExchangeNew);\n\n  function ExchangeNew() {\n    var _this;\n\n    _classCallCheck(this, ExchangeNew);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      PowerUnits: '',\n      Price: '',\n      errorMessage: '',\n      recipient: '',\n      loading: false\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onSubmit\", /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(event) {\n        var accounts, _this$state, PowerUnits, Price, recipient, AllExchanges, m, currentExchange, requestCount, AllRequests, requests, j, n, exchange;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                event.preventDefault();\n\n                _this.setState({\n                  loading: true,\n                  errorMessage: ''\n                });\n\n                _context.next = 4;\n                return ethereum.enable();\n\n              case 4:\n                _context.next = 6;\n                return web3.eth.getAccounts();\n\n              case 6:\n                accounts = _context.sent;\n                _this$state = _this.state, PowerUnits = _this$state.PowerUnits, Price = _this$state.Price, recipient = _this$state.recipient; // await factory.methods.createExchange()\n                //         .send({ from: accounts[0]});\n\n                _context.next = 10;\n                return factory.methods.getDeployedExchanges().call();\n\n              case 10:\n                AllExchanges = _context.sent;\n                m = 0;\n                currentExchange = [];\n                requestCount = 0;\n                AllRequests = [];\n                requests = [];\n\n                if (!(AllExchanges.length != 0)) {\n                  _context.next = 32;\n                  break;\n                }\n\n                j = 0;\n\n              case 18:\n                if (!(j < AllExchanges.length)) {\n                  _context.next = 32;\n                  break;\n                }\n\n                _context.next = 21;\n                return Exchange(AllExchanges[j]);\n\n              case 21:\n                currentExchange = _context.sent;\n                _context.next = 24;\n                return currentExchange.methods.getRequestsCount().call();\n\n              case 24:\n                requestCount = _context.sent;\n                _context.next = 27;\n                return Promise.all(Array(parseInt(requestCount)).fill().map(function (element, index) {\n                  return currentExchange.methods.exchangeRequests(index).call();\n                }));\n\n              case 27:\n                requests = _context.sent;\n                AllRequests.push.apply(AllRequests, requests);\n\n              case 29:\n                j++;\n                _context.next = 18;\n                break;\n\n              case 32:\n                n = AllRequests.filter(function (item) {\n                  if (item.manager == accounts[0]) return typeof item.ExchangeNo === 'string';\n                });\n                m = n[0].ExchangeNo;\n\n                if (!(AllExchanges.length == 0)) {\n                  _context.next = 42;\n                  break;\n                }\n\n                _context.next = 37;\n                return factory.methods.createExchange().send({\n                  from: accounts[0]\n                });\n\n              case 37:\n                _readOnlyError(\"AllExchanges\");\n\n                _context.next = 40;\n                return factory.methods.getDeployedExchanges().call();\n\n              case 40:\n                AllExchanges = _context.sent;\n                m = AllExchanges.length - 1;\n\n              case 42:\n                exchange = Exchange(AllExchanges[m]);\n                _context.prev = 43;\n                _context.next = 46;\n                return exchange.methods.createRequest(web3.utils.toWei(Price, 'ether'), recipient, PowerUnits, m).send({\n                  from: accounts[0]\n                });\n\n              case 46:\n                Router.pushRoute('/');\n                _context.next = 52;\n                break;\n\n              case 49:\n                _context.prev = 49;\n                _context.t0 = _context[\"catch\"](43);\n\n                _this.setState({\n                  errorMessage: _context.t0.message\n                });\n\n              case 52:\n                _context.prev = 52;\n\n                _this.setState({\n                  loading: false\n                });\n\n                return _context.finish(52);\n\n              case 55:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[43, 49, 52, 55]]);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }());\n\n    return _this;\n  }\n\n  _createClass(ExchangeNew, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return __jsx(Layout, null, __jsx(\"h2\", null, \"Create New Exchange\"), __jsx(Divider, {\n        hidden: true\n      }), __jsx(Divider, {\n        inverted: true,\n        width: 6\n      }), __jsx(Divider, {\n        hidden: true\n      }), __jsx(Form, {\n        onSubmit: this.onSubmit,\n        error: !!this.state.errorMessage\n      }, __jsx(Form.Field, {\n        width: 6\n      }, __jsx(\"label\", null, \"Power Units\"), __jsx(Input, {\n        label: \"Kw\",\n        labelPosition: \"right\",\n        value: this.state.PowerUnits,\n        onChange: function onChange(event) {\n          return _this2.setState({\n            PowerUnits: event.target.value\n          });\n        }\n      })), __jsx(Form.Field, {\n        width: 6\n      }, __jsx(\"label\", null, \"Price\"), __jsx(Input, {\n        label: \"Ether\",\n        labelPosition: \"right\",\n        value: this.state.Price,\n        onChange: function onChange(event) {\n          return _this2.setState({\n            Price: event.target.value\n          });\n        }\n      })), __jsx(Form.Field, {\n        width: 6\n      }, __jsx(\"label\", null, \"Recipient\"), __jsx(Input, {\n        value: this.state.recipient,\n        onChange: function onChange(event) {\n          return _this2.setState({\n            recipient: event.target.value\n          });\n        }\n      })), __jsx(Divider, {\n        hidden: true\n      }), __jsx(Divider, {\n        inverted: true,\n        width: 6\n      }), __jsx(Divider, {\n        hidden: true\n      }), __jsx(Message, {\n        error: true,\n        header: \"Oops!\",\n        content: this.state.errorMessage\n      }), __jsx(Button, {\n        loading: this.state.loading,\n        primary: true\n      }, \"Create\")));\n    }\n  }]);\n\n  return ExchangeNew;\n}(Component);\n\nexport default ExchangeNew;","map":{"version":3,"sources":["C:/Users/toshiba/Desktop/Elex22/BlockChainMicroGrid/pages/Exchanges/new.js"],"names":["React","Component","Layout","Form","Button","Input","Message","Divider","Exchange","web3","Router","factory","ExchangeNew","PowerUnits","Price","errorMessage","recipient","loading","event","preventDefault","setState","ethereum","enable","eth","getAccounts","accounts","state","methods","getDeployedExchanges","call","AllExchanges","m","currentExchange","requestCount","AllRequests","requests","length","j","getRequestsCount","Promise","all","Array","parseInt","fill","map","element","index","exchangeRequests","push","apply","n","filter","item","manager","ExchangeNo","createExchange","send","from","exchange","createRequest","utils","toWei","pushRoute","message","onSubmit","target","value"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport Layout from '../../components/Layout';\r\nimport {Form, Button, Input, Message, Divider} from 'semantic-ui-react';\r\nimport Exchange from '../../ethereum/exchange';\r\nimport web3 from '../../ethereum/web3';\r\nimport { Router } from '../../routes';\r\nimport factory from '../../ethereum/factory';\r\n\r\n// import Router from 'next/router'\r\n\r\nclass ExchangeNew extends Component {\r\n    state = {\r\n        PowerUnits: '',\r\n        Price: '',\r\n        errorMessage: '',\r\n        recipient: '',\r\n        loading: false\r\n    };\r\n    \r\n\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        this.setState({loading: true, errorMessage:''});\r\n\r\n        await ethereum.enable();\r\n        const accounts = await web3.eth.getAccounts();\r\n        const { PowerUnits, Price, recipient} = this.state;\r\n\r\n        // await factory.methods.createExchange()\r\n        //         .send({ from: accounts[0]});\r\n        const AllExchanges = await factory.methods.getDeployedExchanges().call();\r\n\r\n\r\n        var m = 0;\r\n        var currentExchange = [];\r\n        var requestCount = 0;\r\n        var AllRequests = [];\r\n        var requests = [];\r\n        if(AllExchanges.length != 0){\r\n            for (var j = 0; j < AllExchanges.length; j++){\r\n                currentExchange = await Exchange(AllExchanges[j]);\r\n                requestCount = await currentExchange.methods.getRequestsCount().call();\r\n                requests = await Promise.all(\r\n                    Array(parseInt(requestCount)).fill().map((element, index) => {\r\n                        return currentExchange.methods.exchangeRequests(index).call()\r\n                    })\r\n                );\r\n                AllRequests.push.apply(AllRequests, requests);\r\n            }\r\n        }\r\n\r\n        var n = AllRequests.filter(function(item){\r\n            if(item.manager == accounts[0])\r\n                return typeof item.ExchangeNo ==='string';  \r\n        });\r\n\r\n        m = n[0].ExchangeNo;\r\n\r\n        if (AllExchanges.length == 0){\r\n            await factory.methods.createExchange()\r\n                .send({ from: accounts[0]});\r\n            AllExchanges = await factory.methods.getDeployedExchanges().call();\r\n            m = AllExchanges.length - 1;\r\n        }\r\n        \r\n        const exchange = Exchange(AllExchanges[m]);\r\n        try{\r\n            await exchange.methods\r\n                .createRequest(\r\n                    web3.utils.toWei(Price, 'ether'),\r\n                    recipient, \r\n                    PowerUnits, m).send({ from: accounts[0]});\r\n            \r\n           \r\n            Router.pushRoute('/');\r\n\r\n        }\r\n        catch(err)\r\n        {\r\n            this.setState({errorMessage: err.message});\r\n        } finally { \r\n\r\n            this.setState({loading: false});\r\n           \r\n        }\r\n    };\r\n\r\n    render() {\r\n        return(\r\n            <Layout>\r\n                <h2>Create New Exchange</h2>\r\n                <Divider hidden />\r\n                <Divider inverted width={6}/>\r\n                <Divider hidden />\r\n                <Form onSubmit={this.onSubmit} error={!!this.state.errorMessage}>\r\n                    <Form.Field width={6}>\r\n                        <label>Power Units</label>\r\n                        <Input \r\n                            label=\"Kw\" \r\n                            labelPosition=\"right\"\r\n                            value={this.state.PowerUnits}\r\n                            onChange={event => \r\n                                this.setState({ PowerUnits: event.target.value })}/>\r\n                    </Form.Field>\r\n\r\n                    <Form.Field width={6}>\r\n                        <label>Price</label>\r\n                        <Input \r\n                            label=\"Ether\" \r\n                            labelPosition=\"right\"\r\n                            value={this.state.Price}\r\n                            onChange={event => \r\n                                this.setState({ Price: event.target.value })}/>\r\n                    </Form.Field>\r\n\r\n                    <Form.Field width={6}>\r\n                        <label>Recipient</label>\r\n                        <Input \r\n                            value={this.state.recipient}\r\n                            onChange={event => this.setState({ recipient: event.target.value})}/>\r\n                    </Form.Field>\r\n\r\n                    <Divider hidden />\r\n                    <Divider inverted width={6}/>\r\n                    <Divider hidden />\r\n                    <Message error header=\"Oops!\" content={this.state.errorMessage} />\r\n                    <Button loading={this.state.loading} primary>Create</Button>\r\n                </Form>\r\n            </Layout>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ExchangeNew;"]},"metadata":{},"sourceType":"module"}