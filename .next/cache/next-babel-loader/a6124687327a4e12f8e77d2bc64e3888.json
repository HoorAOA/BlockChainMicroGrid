{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport { Button, Table } from 'semantic-ui-react';\nimport { Link } from '../../../routes';\nimport Layout from '../../../components/Layout';\nimport Campaign from '../../../ethereum/campaign';\nimport RequestRow from '../../../components/RequestRow';\n\nclass RequestIndex extends Component {\n  static async getInitialProps(props) {\n    const {\n      address\n    } = props.query;\n    const campaign = Campaign(address);\n    const requestCount = await campaign.methods.getRequestsCount().call();\n    const requests = await Promise.all(Array(parseInt(requestCount)).fill().map((element, index) => {\n      return campaign.methods.requests(index).call();\n    }));\n    console.log(requests);\n    return {\n      address,\n      requests,\n      requestCount\n    };\n  }\n\n  renderRows() {\n    return this.props.requests.map((request, index) => {\n      return __jsx(RequestRow, {\n        id: index,\n        key: index,\n        request: request,\n        address: this.props.address\n      });\n    });\n  }\n\n  render() {\n    const {\n      Header,\n      Row,\n      HeaderCell,\n      Body\n    } = Table;\n    return __jsx(Layout, null, __jsx(\"h2\", null, \"Request List\"), __jsx(Link, {\n      route: `/campaigns/${this.props.address}/requests/new`\n    }, __jsx(\"a\", null, __jsx(Button, {\n      primary: true\n    }, \"Add Request\"))), __jsx(Table, null, __jsx(Header, null, __jsx(Row, null, __jsx(HeaderCell, null, \"ID\"), __jsx(HeaderCell, null, \"Description\"), __jsx(HeaderCell, null, \"Amount\"), __jsx(HeaderCell, null, \"Recipient\"), __jsx(HeaderCell, null, \"Approval Count\"), __jsx(HeaderCell, null, \"Approved\"), __jsx(HeaderCell, null, \"Finalize\"))), __jsx(Body, null, this.renderRows())));\n  }\n\n}\n\nexport default RequestIndex;","map":{"version":3,"sources":["C:/Users/toshiba/Desktop/kickstart/pages/campaigns/requests/index.js"],"names":["React","Component","Button","Table","Link","Layout","Campaign","RequestRow","RequestIndex","getInitialProps","props","address","query","campaign","requestCount","methods","getRequestsCount","call","requests","Promise","all","Array","parseInt","fill","map","element","index","console","log","renderRows","request","render","Header","Row","HeaderCell","Body"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,MAAT,EAAkBC,KAAlB,QAA8B,mBAA9B;AACA,SAASC,IAAT,QAAqB,iBAArB;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,UAAP,MAAuB,gCAAvB;;AAEA,MAAMC,YAAN,SAA2BP,SAA3B,CAAqC;AACjC,eAAaQ,eAAb,CAA6BC,KAA7B,EAAoC;AAChC,UAAM;AAAEC,MAAAA;AAAF,QAAcD,KAAK,CAACE,KAA1B;AAEA,UAAMC,QAAQ,GAAGP,QAAQ,CAACK,OAAD,CAAzB;AACA,UAAMG,YAAY,GAAG,MAAMD,QAAQ,CAACE,OAAT,CAAiBC,gBAAjB,GAAoCC,IAApC,EAA3B;AAEA,UAAMC,QAAQ,GAAG,MAAMC,OAAO,CAACC,GAAR,CACnBC,KAAK,CAACC,QAAQ,CAACR,YAAD,CAAT,CAAL,CAA8BS,IAA9B,GAAqCC,GAArC,CAAyC,CAACC,OAAD,EAAUC,KAAV,KAAoB;AACzD,aAAOb,QAAQ,CAACE,OAAT,CAAiBG,QAAjB,CAA0BQ,KAA1B,EAAiCT,IAAjC,EAAP;AACH,KAFD,CADmB,CAAvB;AAMAU,IAAAA,OAAO,CAACC,GAAR,CAAYV,QAAZ;AAEA,WAAO;AAAEP,MAAAA,OAAF;AAAYO,MAAAA,QAAZ;AAAsBJ,MAAAA;AAAtB,KAAP;AACH;;AAEDe,EAAAA,UAAU,GAAE;AACR,WAAO,KAAKnB,KAAL,CAAWQ,QAAX,CAAoBM,GAApB,CAAwB,CAACM,OAAD,EAAUJ,KAAV,KAAoB;AAC/C,aACI,MAAC,UAAD;AACI,QAAA,EAAE,EAAEA,KADR;AAEI,QAAA,GAAG,EAAEA,KAFT;AAGI,QAAA,OAAO,EAAEI,OAHb;AAII,QAAA,OAAO,EAAE,KAAKpB,KAAL,CAAWC;AAJxB,QADJ;AAQH,KATM,CAAP;AAUH;;AAEDoB,EAAAA,MAAM,GAAG;AACL,UAAM;AAACC,MAAAA,MAAD;AAASC,MAAAA,GAAT;AAAcC,MAAAA,UAAd;AAA0BC,MAAAA;AAA1B,QAAmChC,KAAzC;AACA,WACI,MAAC,MAAD,QACI,iCADJ,EAEI,MAAC,IAAD;AAAM,MAAA,KAAK,EAAG,cAAa,KAAKO,KAAL,CAAWC,OAAQ;AAA9C,OACI,iBACI,MAAC,MAAD;AAAQ,MAAA,OAAO;AAAf,qBADJ,CADJ,CAFJ,EAOI,MAAC,KAAD,QACI,MAAC,MAAD,QACI,MAAC,GAAD,QACI,MAAC,UAAD,aADJ,EAEI,MAAC,UAAD,sBAFJ,EAGI,MAAC,UAAD,iBAHJ,EAII,MAAC,UAAD,oBAJJ,EAKI,MAAC,UAAD,yBALJ,EAMI,MAAC,UAAD,mBANJ,EAOI,MAAC,UAAD,mBAPJ,CADJ,CADJ,EAYI,MAAC,IAAD,QACK,KAAKkB,UAAL,EADL,CAZJ,CAPJ,CADJ;AA0BH;;AA3DgC;;AA8DrC,eAAerB,YAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport { Button , Table} from 'semantic-ui-react';\r\nimport { Link } from '../../../routes';\r\nimport Layout from '../../../components/Layout';\r\nimport Campaign from '../../../ethereum/campaign';\r\nimport RequestRow from '../../../components/RequestRow';\r\n\r\nclass RequestIndex extends Component {\r\n    static async getInitialProps(props) {\r\n        const { address } = props.query;\r\n\r\n        const campaign = Campaign(address);\r\n        const requestCount = await campaign.methods.getRequestsCount().call();\r\n\r\n        const requests = await Promise.all(\r\n            Array(parseInt(requestCount)).fill().map((element, index) => {\r\n                return campaign.methods.requests(index).call()\r\n            })\r\n        );\r\n\r\n        console.log(requests);\r\n\r\n        return { address , requests, requestCount};\r\n    }\r\n\r\n    renderRows(){\r\n        return this.props.requests.map((request, index) => {\r\n            return (\r\n                <RequestRow \r\n                    id={index}\r\n                    key={index}\r\n                    request={request}\r\n                    address={this.props.address}\r\n                />\r\n            );\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const {Header, Row, HeaderCell, Body } = Table;\r\n        return (\r\n            <Layout>\r\n                <h2>Request List</h2>\r\n                <Link route={`/campaigns/${this.props.address}/requests/new`}>\r\n                    <a>\r\n                        <Button primary >Add Request</Button>                        \r\n                    </a>\r\n                </Link>\r\n                <Table>\r\n                    <Header>\r\n                        <Row>\r\n                            <HeaderCell>ID</HeaderCell>\r\n                            <HeaderCell>Description</HeaderCell>\r\n                            <HeaderCell>Amount</HeaderCell>\r\n                            <HeaderCell>Recipient</HeaderCell>\r\n                            <HeaderCell>Approval Count</HeaderCell>\r\n                            <HeaderCell>Approved</HeaderCell>\r\n                            <HeaderCell>Finalize</HeaderCell>\r\n                        </Row>\r\n                    </Header>\r\n                    <Body>\r\n                        {this.renderRows()}\r\n                    </Body>\r\n                </Table>\r\n            </Layout>\r\n        );\r\n    }\r\n}\r\n\r\nexport default RequestIndex;"]},"metadata":{},"sourceType":"module"}