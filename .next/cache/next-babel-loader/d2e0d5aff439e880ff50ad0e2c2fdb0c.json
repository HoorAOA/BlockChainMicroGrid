{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport Layout from '../../components/Layout';\nimport { Form, Button, Input, Message, Divider } from 'semantic-ui-react';\nimport Exchange from '../../ethereum/exchange';\nimport web3 from '../../ethereum/web3';\nimport { Router } from '../../routes';\nimport factory from '../../ethereum/factory'; // import Router from 'next/router'\n\nvar ExchangeNew = /*#__PURE__*/function (_Component) {\n  _inherits(ExchangeNew, _Component);\n\n  var _super = _createSuper(ExchangeNew);\n\n  function ExchangeNew() {\n    var _this;\n\n    _classCallCheck(this, ExchangeNew);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      PowerUnits: '',\n      Price: '',\n      errorMessage: '',\n      recipient: '',\n      loading: false\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onSubmit\", /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(event) {\n        var accounts, _this$state, PowerUnits, Price, recipient, AllExchanges, result, exchange;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                event.preventDefault();\n\n                _this.setState({\n                  loading: true,\n                  errorMessage: ''\n                });\n\n                _context.next = 4;\n                return ethereum.enable();\n\n              case 4:\n                _context.next = 6;\n                return web3.eth.getAccounts();\n\n              case 6:\n                accounts = _context.sent;\n                _this$state = _this.state, PowerUnits = _this$state.PowerUnits, Price = _this$state.Price, recipient = _this$state.recipient;\n                _context.next = 10;\n                return factory.methods.createExchange().send({\n                  from: accounts[0]\n                });\n\n              case 10:\n                _context.next = 12;\n                return factory.methods.getDeployedExchanges().call();\n\n              case 12:\n                AllExchanges = _context.sent;\n                result = Array.map(function (id) {\n                  return AllExchanges.find(function (o) {\n                    return o.manager === accounts[0];\n                  }).manager;\n                });\n                console.log(result);\n\n                if (!(result != null)) {\n                  _context.next = 21;\n                  break;\n                }\n\n                _context.next = 18;\n                return factory.methods.createExchange().send({\n                  from: accounts[0]\n                });\n\n              case 18:\n                _context.next = 20;\n                return factory.methods.getDeployedExchanges().call();\n\n              case 20:\n                AllExchanges = _context.sent;\n\n              case 21:\n                exchange = Exchange(AllExchanges[AllExchanges.length - 1]);\n                _context.prev = 22;\n                _context.next = 25;\n                return exchange.methods.createRequest(web3.utils.toWei(Price, 'ether'), recipient, PowerUnits).send({\n                  from: accounts[0]\n                });\n\n              case 25:\n                Router.pushRoute('/');\n                _context.next = 31;\n                break;\n\n              case 28:\n                _context.prev = 28;\n                _context.t0 = _context[\"catch\"](22);\n\n                _this.setState({\n                  errorMessage: _context.t0.message\n                });\n\n              case 31:\n                _context.prev = 31;\n\n                _this.setState({\n                  loading: false\n                });\n\n                return _context.finish(31);\n\n              case 34:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[22, 28, 31, 34]]);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }());\n\n    return _this;\n  }\n\n  _createClass(ExchangeNew, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return __jsx(Layout, null, __jsx(\"h2\", null, \"Create New Exchange\"), __jsx(Divider, {\n        hidden: true\n      }), __jsx(Divider, {\n        inverted: true,\n        width: 6\n      }), __jsx(Divider, {\n        hidden: true\n      }), __jsx(Form, {\n        onSubmit: this.onSubmit,\n        error: !!this.state.errorMessage\n      }, __jsx(Form.Field, {\n        width: 6\n      }, __jsx(\"label\", null, \"Power Units\"), __jsx(Input, {\n        label: \"Kw\",\n        labelPosition: \"right\",\n        value: this.state.PowerUnits,\n        onChange: function onChange(event) {\n          return _this2.setState({\n            PowerUnits: event.target.value\n          });\n        }\n      })), __jsx(Form.Field, {\n        width: 6\n      }, __jsx(\"label\", null, \"Price\"), __jsx(Input, {\n        label: \"Ether\",\n        labelPosition: \"right\",\n        value: this.state.Price,\n        onChange: function onChange(event) {\n          return _this2.setState({\n            Price: event.target.value\n          });\n        }\n      })), __jsx(Form.Field, {\n        width: 6\n      }, __jsx(\"label\", null, \"Recipient\"), __jsx(Input, {\n        value: this.state.recipient,\n        onChange: function onChange(event) {\n          return _this2.setState({\n            recipient: event.target.value\n          });\n        }\n      })), __jsx(Divider, {\n        hidden: true\n      }), __jsx(Divider, {\n        inverted: true,\n        width: 6\n      }), __jsx(Divider, {\n        hidden: true\n      }), __jsx(Message, {\n        error: true,\n        header: \"Oops!\",\n        content: this.state.errorMessage\n      }), __jsx(Button, {\n        loading: this.state.loading,\n        primary: true\n      }, \"Create\")));\n    }\n  }]);\n\n  return ExchangeNew;\n}(Component);\n\nexport default ExchangeNew;","map":{"version":3,"sources":["C:/Users/toshiba/Desktop/Elex22/BlockChainMicroGrid/pages/Exchanges/new.js"],"names":["React","Component","Layout","Form","Button","Input","Message","Divider","Exchange","web3","Router","factory","ExchangeNew","PowerUnits","Price","errorMessage","recipient","loading","event","preventDefault","setState","ethereum","enable","eth","getAccounts","accounts","state","methods","createExchange","send","from","getDeployedExchanges","call","AllExchanges","result","Array","map","id","find","o","manager","console","log","exchange","length","createRequest","utils","toWei","pushRoute","message","onSubmit","target","value"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport Layout from '../../components/Layout';\r\nimport {Form, Button, Input, Message, Divider} from 'semantic-ui-react';\r\nimport Exchange from '../../ethereum/exchange';\r\nimport web3 from '../../ethereum/web3';\r\nimport { Router } from '../../routes';\r\nimport factory from '../../ethereum/factory';\r\n\r\n// import Router from 'next/router'\r\n\r\nclass ExchangeNew extends Component {\r\n    state = {\r\n        PowerUnits: '',\r\n        Price: '',\r\n        errorMessage: '',\r\n        recipient: '',\r\n        loading: false\r\n    };\r\n    \r\n\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        this.setState({loading: true, errorMessage:''});\r\n\r\n        await ethereum.enable();\r\n        const accounts = await web3.eth.getAccounts();\r\n        const { PowerUnits, Price, recipient} = this.state;\r\n\r\n        await factory.methods.createExchange()\r\n                .send({ from: accounts[0]});\r\n        var AllExchanges = await factory.methods.getDeployedExchanges().call();\r\n\r\n        var result = Array.map(id => AllExchanges.find(o => o.manager === accounts[0]).manager);\r\n\r\n        console.log(result);\r\n        if ((result != null)){\r\n            await factory.methods.createExchange()\r\n                .send({ from: accounts[0]});\r\n            AllExchanges = await factory.methods.getDeployedExchanges().call();\r\n        }\r\n        \r\n        const exchange = Exchange(AllExchanges[AllExchanges.length - 1]);\r\n        try{\r\n            await exchange.methods\r\n                .createRequest(\r\n                    web3.utils.toWei(Price, 'ether'),\r\n                    recipient, \r\n                    PowerUnits).send({ from: accounts[0]});\r\n            \r\n           \r\n            Router.pushRoute('/');\r\n\r\n        }\r\n        catch(err)\r\n        {\r\n            this.setState({errorMessage: err.message});\r\n        } finally { \r\n\r\n            this.setState({loading: false});\r\n           \r\n        }\r\n    };\r\n\r\n    render() {\r\n        return(\r\n            <Layout>\r\n                <h2>Create New Exchange</h2>\r\n                <Divider hidden />\r\n                <Divider inverted width={6}/>\r\n                <Divider hidden />\r\n                <Form onSubmit={this.onSubmit} error={!!this.state.errorMessage}>\r\n                    <Form.Field width={6}>\r\n                        <label>Power Units</label>\r\n                        <Input \r\n                            label=\"Kw\" \r\n                            labelPosition=\"right\"\r\n                            value={this.state.PowerUnits}\r\n                            onChange={event => \r\n                                this.setState({ PowerUnits: event.target.value })}/>\r\n                    </Form.Field>\r\n\r\n                    <Form.Field width={6}>\r\n                        <label>Price</label>\r\n                        <Input \r\n                            label=\"Ether\" \r\n                            labelPosition=\"right\"\r\n                            value={this.state.Price}\r\n                            onChange={event => \r\n                                this.setState({ Price: event.target.value })}/>\r\n                    </Form.Field>\r\n\r\n                    <Form.Field width={6}>\r\n                        <label>Recipient</label>\r\n                        <Input \r\n                            value={this.state.recipient}\r\n                            onChange={event => this.setState({ recipient: event.target.value})}/>\r\n                    </Form.Field>\r\n\r\n                    <Divider hidden />\r\n                    <Divider inverted width={6}/>\r\n                    <Divider hidden />\r\n                    <Message error header=\"Oops!\" content={this.state.errorMessage} />\r\n                    <Button loading={this.state.loading} primary>Create</Button>\r\n                </Form>\r\n            </Layout>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ExchangeNew;"]},"metadata":{},"sourceType":"module"}