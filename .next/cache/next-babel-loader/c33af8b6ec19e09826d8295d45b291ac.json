{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport { Card, Grid } from 'semantic-ui-react';\nimport Layout from '../../components/Layout';\nimport Campaign from '../../ethereum/campaign';\nimport web3 from '../../ethereum/web3';\nimport ContributionForm from '../../components/ContributeForm';\n\nvar CampaignShow = /*#__PURE__*/function (_Component) {\n  _inherits(CampaignShow, _Component);\n\n  var _super = _createSuper(CampaignShow);\n\n  function CampaignShow() {\n    _classCallCheck(this, CampaignShow);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(CampaignShow, [{\n    key: \"renderCards\",\n    value: function renderCards() {\n      var _this$props = this.props,\n          balance = _this$props.balance,\n          manager = _this$props.manager,\n          minimumContribution = _this$props.minimumContribution,\n          requestCount = _this$props.requestCount,\n          approversCount = _this$props.approversCount;\n      var items = [{\n        header: manager,\n        meta: 'Manager Address ',\n        description: 'The manager created this campaign and can request money',\n        style: {\n          overflowWrap: 'break-word'\n        }\n      }, {\n        header: minimumContribution,\n        meta: 'Minimum Contribution (wei) ',\n        description: 'You must contribute at least this much to be ana approver',\n        style: {\n          overflowWrap: 'break-word'\n        }\n      }, {\n        header: requestCount,\n        meta: 'Number of requests ',\n        description: 'Request to take permission from the approvers to spend money',\n        style: {\n          overflowWrap: 'break-word'\n        }\n      }, {\n        header: approversCount,\n        meta: 'Number of approvers ',\n        description: 'Number of contributers who donated money and can approve the spending request',\n        style: {\n          overflowWrap: 'break-word'\n        }\n      }, {\n        header: web3.utils.fromWei(balance, 'ether'),\n        meta: 'Campaign balance (ether) ',\n        description: 'How much money this campaign collected',\n        style: {\n          overflowWrap: 'break-word'\n        }\n      }];\n      return __jsx(Card.Group, {\n        items: items\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return __jsx(Layout, null, __jsx(\"h3\", null, \"Campaign Show\"), __jsx(Grid, null, __jsx(Grid.Column, {\n        width: 10\n      }, this.renderCards()), __jsx(Grid.Column, {\n        width: 6\n      }, __jsx(ContributionForm, {\n        address: this.props.address\n      }))));\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function () {\n      var _getInitialProps = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(props) {\n        var campaign, summary;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                campaign = Campaign(props.query.address);\n                _context.next = 3;\n                return campaign.methods.getSummary().call();\n\n              case 3:\n                summary = _context.sent;\n                return _context.abrupt(\"return\", {\n                  address: props.query.address,\n                  minimumContribution: summary[0],\n                  balance: summary[1],\n                  requestCount: summary[2],\n                  approversCount: summary[3],\n                  manager: summary[4]\n                });\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function getInitialProps(_x) {\n        return _getInitialProps.apply(this, arguments);\n      }\n\n      return getInitialProps;\n    }()\n  }]);\n\n  return CampaignShow;\n}(Component);\n\nexport default CampaignShow;","map":{"version":3,"sources":["C:/Users/toshiba/Desktop/kickstart/pages/campaigns/show.js"],"names":["React","Component","Card","Grid","Layout","Campaign","web3","ContributionForm","CampaignShow","props","balance","manager","minimumContribution","requestCount","approversCount","items","header","meta","description","style","overflowWrap","utils","fromWei","renderCards","address","campaign","query","methods","getSummary","call","summary"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Card , Grid } from 'semantic-ui-react'; \r\nimport Layout from '../../components/Layout';\r\nimport Campaign from '../../ethereum/campaign';\r\nimport web3 from '../../ethereum/web3';\r\nimport ContributionForm from '../../components/ContributeForm';\r\n\r\nclass CampaignShow extends Component {\r\n    static async getInitialProps(props) {\r\n        const campaign = Campaign(props.query.address);\r\n        const summary = await campaign.methods.getSummary().call();\r\n        // console.log(summary);\r\n        // console.log(props.query.address);\r\n\r\n        return {\r\n            address: props.query.address,\r\n            minimumContribution: summary[0],\r\n            balance: summary[1],\r\n            requestCount: summary[2],\r\n            approversCount: summary[3],\r\n            manager: summary[4]\r\n        };\r\n    }\r\n\r\n    renderCards() {\r\n        const{\r\n            balance,\r\n            manager,\r\n            minimumContribution,\r\n            requestCount,\r\n            approversCount\r\n        } = this.props;\r\n\r\n        const items = [\r\n            {\r\n                header: manager,\r\n                meta: 'Manager Address ',\r\n                description: 'The manager created this campaign and can request money',\r\n                style: {overflowWrap: 'break-word'}\r\n            },\r\n            {\r\n                header: minimumContribution,\r\n                meta: 'Minimum Contribution (wei) ',\r\n                description: 'You must contribute at least this much to be ana approver',\r\n                style: {overflowWrap: 'break-word'}\r\n            },\r\n            {\r\n                header: requestCount,\r\n                meta: 'Number of requests ',\r\n                description: 'Request to take permission from the approvers to spend money',\r\n                style: {overflowWrap: 'break-word'}\r\n            },\r\n            {\r\n                header: approversCount,\r\n                meta: 'Number of approvers ',\r\n                description: 'Number of contributers who donated money and can approve the spending request',\r\n                style: {overflowWrap: 'break-word'}\r\n            },\r\n            {\r\n                header: web3.utils.fromWei(balance, 'ether'),\r\n                meta: 'Campaign balance (ether) ',\r\n                description: 'How much money this campaign collected',\r\n                style: {overflowWrap: 'break-word'}\r\n            }\r\n        ];\r\n\r\n        return <Card.Group items={items}/>\r\n    }\r\n\r\n    render(){\r\n\r\n        return(\r\n            <Layout>\r\n                <h3>Campaign Show</h3>\r\n                <Grid>\r\n                    <Grid.Column width={10}>\r\n                        {this.renderCards()}\r\n                    </Grid.Column>\r\n                    <Grid.Column width={6}>\r\n                        <ContributionForm address={this.props.address} />\r\n                    </Grid.Column>\r\n                </Grid>\r\n                \r\n            </Layout>\r\n        );\r\n    }\r\n}         \r\n\r\nexport default CampaignShow;"]},"metadata":{},"sourceType":"module"}