{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport { Card, Button } from 'semantic-ui-react';\nimport factory from '../ethereum/factory';\nimport Layout from '../components/Layout';\nimport { Link } from '../routes';\nimport Exchange from '../ethereum/exchange'; // export default () => {\n//     return <h1>This is the index page</h1>;\n// };\n\nvar ExchangeIndex = /*#__PURE__*/function (_Component) {\n  _inherits(ExchangeIndex, _Component);\n\n  var _super = _createSuper(ExchangeIndex);\n\n  function ExchangeIndex() {\n    var _this;\n\n    _classCallCheck(this, ExchangeIndex);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      units: '',\n      price: '',\n      manager: '',\n      loading: false,\n      errorMessage: ''\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onSubmit\", /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(event) {\n        var exchange, _this$state, manager, units, price, accounts;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                event.preventDefault();\n                exchange = Exchange(_this.props.address);\n                _this$state = _this.state, manager = _this$state.manager, units = _this$state.units, price = _this$state.price;\n\n                _this.setState({\n                  loading: true,\n                  errorMessage: ''\n                });\n\n                _context.prev = 4;\n                _context.next = 7;\n                return ethereum.enable();\n\n              case 7:\n                _context.next = 9;\n                return web3.eth.getAccounts();\n\n              case 9:\n                accounts = _context.sent;\n                _context.next = 12;\n                return exchange.methods.FinalizeExchange(_this.props.id).send({\n                  from: accounts[0]\n                });\n\n              case 12:\n                Router.pushRoute(\"/\");\n                _context.next = 18;\n                break;\n\n              case 15:\n                _context.prev = 15;\n                _context.t0 = _context[\"catch\"](4);\n\n                _this.setState({\n                  errorMessage: _context.t0.message\n                });\n\n              case 18:\n                _context.prev = 18;\n\n                _this.setState({\n                  loading: false\n                });\n\n                return _context.finish(18);\n\n              case 21:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[4, 15, 18, 21]]);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }());\n\n    return _this;\n  }\n\n  _createClass(ExchangeIndex, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.renderExchanges();\n    }\n  }, {\n    key: \"renderExchanges\",\n    value: function renderExchanges() {\n      var _this2 = this;\n\n      var items = this.props.exchanges.map( /*#__PURE__*/function () {\n        var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(address) {\n          var exchange, summary;\n          return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n            while (1) {\n              switch (_context2.prev = _context2.next) {\n                case 0:\n                  exchange = Exchange(address);\n                  _context2.next = 3;\n                  return exchange.methods.getSummary().call();\n\n                case 3:\n                  summary = _context2.sent;\n                  return _context2.abrupt(\"return\", {\n                    header: address,\n                    description: __jsx(Button, {\n                      disabled: exchange.complete,\n                      color: \"green\",\n                      basic: true,\n                      floated: \"right\",\n                      onClick: _this2.onSubmit\n                    }, \"BUY\"),\n                    meta: summary[0] + 'Kw For ' + summary[1] + 'SDG',\n                    fluid: true\n                  });\n\n                case 5:\n                case \"end\":\n                  return _context2.stop();\n              }\n            }\n          }, _callee2);\n        }));\n\n        return function (_x2) {\n          return _ref2.apply(this, arguments);\n        };\n      }());\n      Promise.all(items);\n      console.log(items);\n      return __jsx(Card.Group, {\n        items: items\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return __jsx(\"div\", null, __jsx(Layout, null, __jsx(\"h2\", null, \"Pending Exchanges\"), __jsx(Link, {\n        route: \"/Exchanges/new\"\n      }, __jsx(\"a\", null, __jsx(Button, {\n        content: \"Create new Exchange\",\n        icon: \"add\",\n        primary: true,\n        floated: \"right\"\n      }))), this.renderExchanges()));\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function () {\n      var _getInitialProps = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(props) {\n        var exchanges, address;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return factory.methods.getDeployedExchanges().call();\n\n              case 2:\n                exchanges = _context3.sent;\n                address = props.query.address;\n                return _context3.abrupt(\"return\", {\n                  exchanges: exchanges,\n                  address: address\n                });\n\n              case 5:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      function getInitialProps(_x3) {\n        return _getInitialProps.apply(this, arguments);\n      }\n\n      return getInitialProps;\n    }()\n  }]);\n\n  return ExchangeIndex;\n}(Component);\n\nexport default ExchangeIndex;","map":{"version":3,"sources":["C:/Users/toshiba/Desktop/BlockChainMicroGrid/pages/index.js"],"names":["React","Component","Card","Button","factory","Layout","Link","Exchange","ExchangeIndex","units","price","manager","loading","errorMessage","event","preventDefault","exchange","props","address","state","setState","ethereum","enable","web3","eth","getAccounts","accounts","methods","FinalizeExchange","id","send","from","Router","pushRoute","message","renderExchanges","items","exchanges","map","getSummary","call","summary","header","description","complete","onSubmit","meta","fluid","Promise","all","console","log","getDeployedExchanges","query"],"mappings":"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","sourcesContent":["import React , {Component} from 'react';\r\nimport {Card , Button} from 'semantic-ui-react';\r\nimport factory from '../ethereum/factory';\r\nimport Layout from '../components/Layout';\r\nimport { Link } from '../routes';\r\nimport Exchange from '../ethereum/exchange';\r\n\r\n// export default () => {\r\n//     return <h1>This is the index page</h1>;\r\n// };\r\n\r\nclass ExchangeIndex extends Component {\r\n\r\n    static async getInitialProps(props){\r\n        const exchanges = await factory.methods.getDeployedExchanges().call();\r\n        const {address} = props.query;\r\n        return { exchanges , address};\r\n    }\r\n    \r\n    state = {\r\n        units: '',\r\n        price: '',\r\n        manager: '',\r\n        loading: false,\r\n        errorMessage:''\r\n    }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        const exchange = Exchange(this.props.address);\r\n        const { manager, units, price} = this.state;\r\n\r\n        this.setState({loading: true, errorMessage: ''});\r\n\r\n        try {\r\n            await ethereum.enable();\r\n            const accounts = await web3.eth.getAccounts();\r\n            await exchange.methods.FinalizeExchange(this.props.id).send({\r\n                from : accounts[0]\r\n            });\r\n    \r\n\r\n        Router.pushRoute(`/`)\r\n        } catch (err) {\r\n\r\n            this.setState({ errorMessage: err.message});\r\n        }\r\n        finally{\r\n\r\n            this.setState({ loading: false});\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.renderExchanges();\r\n      }\r\n\r\n    renderExchanges() {\r\n        \r\n        const items = this.props.exchanges.map(async (address) => {\r\n\r\n        const exchange = Exchange(address);\r\n        const summary = await exchange.methods.getSummary().call();\r\n            // console.log(summary);\r\n        return {\r\n                header: address,\r\n                description: \r\n                <Button disabled={exchange.complete} \r\n                    color=\"green\" \r\n                    basic \r\n                    floated=\"right\"\r\n                    onClick={this.onSubmit}> \r\n                    BUY\r\n                </Button>\r\n                ,\r\n                meta:  summary[0] + 'Kw For ' + summary[1] + 'SDG',\r\n                fluid: true\r\n            };\r\n        });\r\n        Promise.all(items);\r\n        console.log(items);\r\n\r\n        return <Card.Group items={items}/>;\r\n    }\r\n    render() {\r\n    return <div>\r\n        <Layout>\r\n\r\n            <h2>Pending Exchanges</h2>\r\n            <Link route=\"/Exchanges/new\">\r\n                <a>\r\n                    <Button \r\n                        content='Create new Exchange' \r\n                        icon='add' \r\n                        primary \r\n                        floated=\"right\" \r\n                    />\r\n                </a>\r\n            </Link>\r\n            {this.renderExchanges()}\r\n                \r\n                \r\n        </Layout>\r\n        </div>;\r\n    }\r\n}\r\n\r\nexport default ExchangeIndex;"]},"metadata":{},"sourceType":"module"}