{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport { Button, Table } from 'semantic-ui-react';\nimport { Link } from '../../routes';\nimport Layout from '../../components/Layout';\nimport Exchange from '../../ethereum/exchange';\nimport RequestRow from '../../components/RequestRow';\n\nclass ExchangeIndex extends Component {\n  static async getInitialProps(props) {\n    const {\n      address\n    } = props.query;\n    const exchange = Exchange(address);\n    const exchangesCount = await exchange.methods.getExchangesCount().call();\n    const exchanges = await Promise.all(Array(parseInt(exchangesCount)).fill().map((element, index) => {\n      return exchange.methods.deployedExchanges(index).call();\n    }));\n    console.log(exchanges);\n    return {\n      address,\n      exchanges,\n      exchangesCount\n    };\n  }\n\n  renderRows() {\n    return this.props.exchanges.map((request, index) => {\n      return __jsx(RequestRow, {\n        id: index,\n        key: index,\n        exchange: exchange,\n        address: this.props.address\n      });\n    });\n  }\n\n  render() {\n    const {\n      Header,\n      Row,\n      HeaderCell,\n      Body\n    } = Table;\n    return __jsx(Layout, null, __jsx(\"h2\", null, \"My Exchanges List\"), __jsx(Link, {\n      route: `/Exchanges/new`\n    }, __jsx(\"a\", null, __jsx(Button, {\n      primary: true,\n      floated: \"right\",\n      style: {\n        marginBottom: 10\n      }\n    }, \"New Exchange\"))), __jsx(Table, null, __jsx(Header, null, __jsx(Row, null, __jsx(HeaderCell, null, \"ID\"), __jsx(HeaderCell, null, \"Units (Kw)\"), __jsx(HeaderCell, null, \"Price (SDG)\"), __jsx(HeaderCell, null, \"complete\"))), __jsx(Body, null, this.renderRows())), __jsx(\"div\", null, \"Found \", this.props.exchangesCount, \" Exchanges.\"));\n  }\n\n}\n\nexport default ExchangeIndex;","map":{"version":3,"sources":["C:/Users/toshiba/Desktop/BlockChainMicroGrid/pages/Exchanges/MyExchanges.js"],"names":["React","Component","Button","Table","Link","Layout","Exchange","RequestRow","ExchangeIndex","getInitialProps","props","address","query","exchange","exchangesCount","methods","getExchangesCount","call","exchanges","Promise","all","Array","parseInt","fill","map","element","index","deployedExchanges","console","log","renderRows","request","render","Header","Row","HeaderCell","Body","marginBottom"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,MAAT,EAAkBC,KAAlB,QAA8B,mBAA9B;AACA,SAASC,IAAT,QAAqB,cAArB;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,OAAOC,QAAP,MAAqB,yBAArB;AACA,OAAOC,UAAP,MAAuB,6BAAvB;;AAEA,MAAMC,aAAN,SAA4BP,SAA5B,CAAsC;AAClC,eAAaQ,eAAb,CAA6BC,KAA7B,EAAoC;AAChC,UAAM;AAAEC,MAAAA;AAAF,QAAcD,KAAK,CAACE,KAA1B;AAEA,UAAMC,QAAQ,GAAGP,QAAQ,CAACK,OAAD,CAAzB;AACA,UAAMG,cAAc,GAAG,MAAMD,QAAQ,CAACE,OAAT,CAAiBC,iBAAjB,GAAqCC,IAArC,EAA7B;AAEA,UAAMC,SAAS,GAAG,MAAMC,OAAO,CAACC,GAAR,CACpBC,KAAK,CAACC,QAAQ,CAACR,cAAD,CAAT,CAAL,CAAgCS,IAAhC,GAAuCC,GAAvC,CAA2C,CAACC,OAAD,EAAUC,KAAV,KAAoB;AAC3D,aAAOb,QAAQ,CAACE,OAAT,CAAiBY,iBAAjB,CAAmCD,KAAnC,EAA0CT,IAA1C,EAAP;AACH,KAFD,CADoB,CAAxB;AAMAW,IAAAA,OAAO,CAACC,GAAR,CAAYX,SAAZ;AAEA,WAAO;AAAEP,MAAAA,OAAF;AAAYO,MAAAA,SAAZ;AAAuBJ,MAAAA;AAAvB,KAAP;AACH;;AAEDgB,EAAAA,UAAU,GAAE;AACR,WAAO,KAAKpB,KAAL,CAAWQ,SAAX,CAAqBM,GAArB,CAAyB,CAACO,OAAD,EAAUL,KAAV,KAAoB;AAChD,aACI,MAAC,UAAD;AACI,QAAA,EAAE,EAAEA,KADR;AAEI,QAAA,GAAG,EAAEA,KAFT;AAGI,QAAA,QAAQ,EAAEb,QAHd;AAII,QAAA,OAAO,EAAE,KAAKH,KAAL,CAAWC;AAJxB,QADJ;AASH,KAVM,CAAP;AAWH;;AAEDqB,EAAAA,MAAM,GAAG;AACL,UAAM;AAACC,MAAAA,MAAD;AAASC,MAAAA,GAAT;AAAcC,MAAAA,UAAd;AAA0BC,MAAAA;AAA1B,QAAmCjC,KAAzC;AACA,WACI,MAAC,MAAD,QACI,sCADJ,EAEI,MAAC,IAAD;AAAM,MAAA,KAAK,EAAG;AAAd,OACI,iBACI,MAAC,MAAD;AAAQ,MAAA,OAAO,MAAf;AAAgB,MAAA,OAAO,EAAC,OAAxB;AAAgC,MAAA,KAAK,EAAE;AAACkC,QAAAA,YAAY,EAAE;AAAf;AAAvC,sBADJ,CADJ,CAFJ,EAOI,MAAC,KAAD,QACI,MAAC,MAAD,QACI,MAAC,GAAD,QACI,MAAC,UAAD,aADJ,EAEI,MAAC,UAAD,qBAFJ,EAGI,MAAC,UAAD,sBAHJ,EAII,MAAC,UAAD,mBAJJ,CADJ,CADJ,EASI,MAAC,IAAD,QACK,KAAKP,UAAL,EADL,CATJ,CAPJ,EAoBJ,6BAAY,KAAKpB,KAAL,CAAWI,cAAvB,gBApBI,CADJ;AAwBH;;AA1DiC;;AA6DtC,eAAeN,aAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport { Button , Table} from 'semantic-ui-react';\r\nimport { Link } from '../../routes';\r\nimport Layout from '../../components/Layout';\r\nimport Exchange from '../../ethereum/exchange';\r\nimport RequestRow from '../../components/RequestRow';\r\n\r\nclass ExchangeIndex extends Component {\r\n    static async getInitialProps(props) {\r\n        const { address } = props.query;\r\n\r\n        const exchange = Exchange(address);\r\n        const exchangesCount = await exchange.methods.getExchangesCount().call();\r\n\r\n        const exchanges = await Promise.all(\r\n            Array(parseInt(exchangesCount)).fill().map((element, index) => {\r\n                return exchange.methods.deployedExchanges(index).call()\r\n            })\r\n        );\r\n\r\n        console.log(exchanges);\r\n\r\n        return { address , exchanges, exchangesCount};\r\n    }\r\n\r\n    renderRows(){\r\n        return this.props.exchanges.map((request, index) => {\r\n            return (\r\n                <RequestRow \r\n                    id={index}\r\n                    key={index}\r\n                    exchange={exchange}\r\n                    address={this.props.address}\r\n                    \r\n                />\r\n            );\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const {Header, Row, HeaderCell, Body } = Table;\r\n        return (\r\n            <Layout>\r\n                <h2>My Exchanges List</h2>\r\n                <Link route={`/Exchanges/new`}>\r\n                    <a>\r\n                        <Button primary floated=\"right\" style={{marginBottom: 10}} >New Exchange</Button>                        \r\n                    </a>\r\n                </Link>\r\n                <Table>\r\n                    <Header>\r\n                        <Row>\r\n                            <HeaderCell>ID</HeaderCell>\r\n                            <HeaderCell>Units (Kw)</HeaderCell>\r\n                            <HeaderCell>Price (SDG)</HeaderCell>\r\n                            <HeaderCell>complete</HeaderCell>\r\n                        </Row>\r\n                    </Header>\r\n                    <Body>\r\n                        {this.renderRows()}\r\n                    </Body>\r\n                </Table>\r\n        <div>Found {this.props.exchangesCount} Exchanges.</div>\r\n            </Layout>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ExchangeIndex;"]},"metadata":{},"sourceType":"module"}