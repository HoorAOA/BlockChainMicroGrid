{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport { Card, Button } from 'semantic-ui-react';\nimport factory from '../ethereum/factory';\nimport Layout from '../components/Layout';\nimport { Link } from '../routes';\nimport Exchange from '../ethereum/exchange'; // export default () => {\n//     return <h1>This is the index page</h1>;\n// };\n\nvar ExchangeIndex = /*#__PURE__*/function (_Component) {\n  _inherits(ExchangeIndex, _Component);\n\n  var _super = _createSuper(ExchangeIndex);\n\n  function ExchangeIndex() {\n    var _this;\n\n    _classCallCheck(this, ExchangeIndex);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      units: '',\n      price: '',\n      manager: '',\n      loading: false,\n      errorMessage: '',\n      cardsItems: {}\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onSubmit\", /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(event) {\n        var exchange, accounts;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                event.preventDefault();\n                exchange = Exchange(_this.props.address); // const { manager, units, price} = exchange;\n\n                _this.setState({\n                  loading: true,\n                  errorMessage: ''\n                });\n\n                _context.prev = 3;\n                _context.next = 6;\n                return ethereum.enable();\n\n              case 6:\n                _context.next = 8;\n                return web3.eth.getAccounts();\n\n              case 8:\n                accounts = _context.sent;\n                _context.next = 11;\n                return exchange.methods.FinalizeExchange(_this.props.address, exchange.manager, exchange.price, exchange.units, exchange.complete).send({\n                  from: accounts[0]\n                });\n\n              case 11:\n                Router.pushRoute(\"/\");\n                _context.next = 17;\n                break;\n\n              case 14:\n                _context.prev = 14;\n                _context.t0 = _context[\"catch\"](3);\n\n                _this.setState({\n                  errorMessage: _context.t0.message\n                });\n\n              case 17:\n                _context.prev = 17;\n\n                _this.setState({\n                  loading: false\n                });\n\n                return _context.finish(17);\n\n              case 20:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[3, 14, 17, 20]]);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }());\n\n    return _this;\n  }\n\n  _createClass(ExchangeIndex, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n        var _this2 = this;\n\n        var items, cardsItems;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                items = this.props.exchanges.map( /*#__PURE__*/function () {\n                  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(address) {\n                    var exchange, summary;\n                    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n                      while (1) {\n                        switch (_context2.prev = _context2.next) {\n                          case 0:\n                            exchange = Exchange(address);\n                            _context2.next = 3;\n                            return exchange.methods.getSummary().call();\n\n                          case 3:\n                            summary = _context2.sent;\n                            return _context2.abrupt(\"return\", {\n                              header: address,\n                              description: __jsx(Button, {\n                                disabled: exchange.complete,\n                                loading: _this2.state.loading,\n                                color: \"green\",\n                                basic: true,\n                                floated: \"right\",\n                                onClick: _this2.onSubmit\n                              }, \"BUY\"),\n                              meta: summary[0] + 'Kw | ' + summary[1] + 'wei',\n                              fluid: true\n                            });\n\n                          case 5:\n                          case \"end\":\n                            return _context2.stop();\n                        }\n                      }\n                    }, _callee2);\n                  }));\n\n                  return function (_x2) {\n                    return _ref2.apply(this, arguments);\n                  };\n                }());\n                _context3.next = 3;\n                return Promise.all(items).then(function (values) {\n                  console.log(values);\n                  return values;\n                });\n\n              case 3:\n                cardsItems = _context3.sent;\n                this.setState({\n                  cardsItems: cardsItems\n                });\n\n              case 5:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      }\n\n      return componentDidMount;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      return __jsx(\"div\", null, __jsx(Layout, null, __jsx(\"h2\", null, \"Pending Exchanges\"), __jsx(Link, {\n        route: \"/Exchanges/new\"\n      }, __jsx(\"a\", null, __jsx(Button, {\n        content: \"Create new Exchange\",\n        icon: \"add\",\n        primary: true,\n        floated: \"right\"\n      }))), __jsx(Card.Group, {\n        items: this.state.cardsItems\n      })));\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function () {\n      var _getInitialProps = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(props) {\n        var exchanges, address;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.next = 2;\n                return factory.methods.getDeployedExchanges().call();\n\n              case 2:\n                exchanges = _context4.sent;\n                address = props.query.address;\n                return _context4.abrupt(\"return\", {\n                  exchanges: exchanges,\n                  address: address\n                });\n\n              case 5:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4);\n      }));\n\n      function getInitialProps(_x3) {\n        return _getInitialProps.apply(this, arguments);\n      }\n\n      return getInitialProps;\n    }()\n  }]);\n\n  return ExchangeIndex;\n}(Component);\n\nexport default ExchangeIndex;","map":{"version":3,"sources":["C:/Users/toshiba/Desktop/BlockChainMicroGrid/pages/index.js"],"names":["React","Component","Card","Button","factory","Layout","Link","Exchange","ExchangeIndex","units","price","manager","loading","errorMessage","cardsItems","event","preventDefault","exchange","props","address","setState","ethereum","enable","web3","eth","getAccounts","accounts","methods","FinalizeExchange","complete","send","from","Router","pushRoute","message","items","exchanges","map","getSummary","call","summary","header","description","state","onSubmit","meta","fluid","Promise","all","then","values","console","log","getDeployedExchanges","query"],"mappings":"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","sourcesContent":["import React , {Component} from 'react';\r\nimport {Card , Button} from 'semantic-ui-react';\r\nimport factory from '../ethereum/factory';\r\nimport Layout from '../components/Layout';\r\nimport { Link } from '../routes';\r\nimport Exchange from '../ethereum/exchange';\r\n\r\n// export default () => {\r\n//     return <h1>This is the index page</h1>;\r\n// };\r\n\r\nclass ExchangeIndex extends Component {\r\n\r\n    static async getInitialProps(props){\r\n        const exchanges = await factory.methods.getDeployedExchanges().call();\r\n        const {address} = props.query;\r\n        \r\n        return { exchanges , address};\r\n    }\r\n    \r\n    state = {\r\n        units: '',\r\n        price: '',\r\n        manager: '',\r\n        loading: false,\r\n        errorMessage:'',\r\n        cardsItems: {}\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const items = this.props.exchanges.map(async (address) => {\r\n\r\n            const exchange = Exchange(address);\r\n            const summary = await exchange.methods.getSummary().call();\r\n                // console.log(summary);\r\n            return {\r\n                    header: address,\r\n                    description: \r\n                    <Button disabled={exchange.complete}  \r\n                        loading = {this.state.loading}\r\n                        color= \"green\"\r\n                        basic \r\n                        floated=\"right\"\r\n                        onClick={this.onSubmit}> \r\n                        BUY\r\n                    </Button>\r\n                    ,\r\n                    meta:  summary[0] + 'Kw | ' + summary[1] + 'wei',\r\n                    fluid: true\r\n                };\r\n            });\r\n            \r\n            const cardsItems = await Promise.all(items).then((values) => {\r\n                console.log(values);\r\n                return values;\r\n              });\r\n    \r\n        this.setState({ cardsItems });\r\n     }\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        const exchange = Exchange(this.props.address);\r\n        // const { manager, units, price} = exchange;\r\n\r\n        this.setState({loading: true, errorMessage: ''});\r\n\r\n        try {\r\n            await ethereum.enable();\r\n            const accounts = await web3.eth.getAccounts();\r\n            await exchange.methods.FinalizeExchange(this.props.address, exchange.manager, exchange.price, exchange.units, exchange.complete).send({\r\n                from : accounts[0]\r\n            });\r\n    \r\n\r\n        Router.pushRoute(`/`)\r\n        } catch (err) {\r\n\r\n            this.setState({ errorMessage: err.message});\r\n        }\r\n        finally{\r\n\r\n            this.setState({ loading: false});\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n    return <div>\r\n        <Layout>\r\n\r\n            <h2>Pending Exchanges</h2>\r\n            <Link route=\"/Exchanges/new\">\r\n                <a>\r\n                    <Button \r\n                        content='Create new Exchange' \r\n                        icon='add' \r\n                        primary \r\n                        floated=\"right\" \r\n                    />\r\n                </a>\r\n            </Link>\r\n            <Card.Group items={this.state.cardsItems}/>\r\n                \r\n                \r\n        </Layout>\r\n        </div>;\r\n    }\r\n}\r\n\r\nexport default ExchangeIndex;"]},"metadata":{},"sourceType":"module"}