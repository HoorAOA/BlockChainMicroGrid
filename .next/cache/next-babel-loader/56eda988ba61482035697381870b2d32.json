{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport { Form, Input, Message, Button } from 'semantic-ui-react';\nimport Campaign from '../ethereum/campaign';\nimport web3 from '../ethereum/web3';\n\nvar ContributeForm = /*#__PURE__*/function (_Component) {\n  _inherits(ContributeForm, _Component);\n\n  var _super = _createSuper(ContributeForm);\n\n  function ContributeForm() {\n    _classCallCheck(this, ContributeForm);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(ContributeForm, [{\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      state = {\n        value: ''\n      };\n\n      onSubmit = /*#__PURE__*/function () {\n        var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(event) {\n          var campaign, accounts;\n          return _regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  event.preventDefault();\n                  campaign = Campaign(_this.props.address);\n                  _context.prev = 2;\n                  ethereum.enable();\n                  _context.next = 6;\n                  return web3.eth.getAccounts();\n\n                case 6:\n                  accounts = _context.sent;\n                  _context.next = 9;\n                  return campaign.methods.contribute().send({\n                    from: accounts[0],\n                    value: web3.utils.toWei(_this.state.value, 'ether')\n                  });\n\n                case 9:\n                  _context.next = 13;\n                  break;\n\n                case 11:\n                  _context.prev = 11;\n                  _context.t0 = _context[\"catch\"](2);\n\n                case 13:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee, null, [[2, 11]]);\n        }));\n\n        return function onSubmit(_x) {\n          return _ref.apply(this, arguments);\n        };\n      }();\n\n      return __jsx(Form, {\n        onSubmit: this.onSubmit\n      }, __jsx(Form.Field, null, __jsx(\"label\", null, \"Amount to contribute\"), __jsx(\"input\", {\n        value: this.state.value,\n        onChange: function onChange(event) {\n          return _this.setState({\n            value: event.target.value\n          });\n        },\n        label: \"ether\",\n        labelPosition: \"right\"\n      })), __jsx(Button, {\n        primary: true\n      }, \"Contribute\"));\n    }\n  }]);\n\n  return ContributeForm;\n}(Component);\n\nexport default ContributeForm;","map":{"version":3,"sources":["C:/Users/toshiba/Desktop/kickstart/components/ContributeForm.js"],"names":["React","Component","Form","Input","Message","Button","Campaign","web3","ContributeForm","state","value","onSubmit","event","preventDefault","campaign","props","address","ethereum","enable","eth","getAccounts","accounts","methods","contribute","send","from","utils","toWei","setState","target"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,EAAeC,KAAf,EAAsBC,OAAtB,EAA+BC,MAA/B,QAA6C,mBAA7C;AACA,OAAOC,QAAP,MAAqB,sBAArB;AACA,OAAOC,IAAP,MAAiB,kBAAjB;;IAGMC,c;;;;;;;;;;;;;6BACQ;AAAA;;AAENC,MAAAA,KAAK,GAAG;AACJC,QAAAA,KAAK,EAAE;AADH,OAAR;;AAIAC,MAAAA,QAAQ;AAAA,4EAAG,iBAAOC,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACPA,kBAAAA,KAAK,CAACC,cAAN;AACMC,kBAAAA,QAFC,GAEUR,QAAQ,CAAC,KAAI,CAACS,KAAL,CAAWC,OAAZ,CAFlB;AAAA;AAKHC,kBAAAA,QAAQ,CAACC,MAAT;AALG;AAAA,yBAMoBX,IAAI,CAACY,GAAL,CAASC,WAAT,EANpB;;AAAA;AAMGC,kBAAAA,QANH;AAAA;AAAA,yBAOGP,QAAQ,CAACQ,OAAT,CAAiBC,UAAjB,GAA8BC,IAA9B,CAAmC;AACrCC,oBAAAA,IAAI,EAACJ,QAAQ,CAAC,CAAD,CADwB;AAErCX,oBAAAA,KAAK,EAAEH,IAAI,CAACmB,KAAL,CAAWC,KAAX,CAAiB,KAAI,CAAClB,KAAL,CAAWC,KAA5B,EAAmC,OAAnC;AAF8B,mBAAnC,CAPH;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAH;;AAAA;AAAA;AAAA;AAAA,SAAR;;AAiBA,aACI,MAAC,IAAD;AAAM,QAAA,QAAQ,EAAE,KAAKC;AAArB,SACI,MAAC,IAAD,CAAM,KAAN,QACI,4CADJ,EAEI;AACI,QAAA,KAAK,EAAE,KAAKF,KAAL,CAAWC,KADtB;AAEI,QAAA,QAAQ,EAAE,kBAAAE,KAAK;AAAA,iBAAI,KAAI,CAACgB,QAAL,CAAc;AAAClB,YAAAA,KAAK,EAAEE,KAAK,CAACiB,MAAN,CAAanB;AAArB,WAAd,CAAJ;AAAA,SAFnB;AAGI,QAAA,KAAK,EAAC,OAHV;AAII,QAAA,aAAa,EAAC;AAJlB,QAFJ,CADJ,EAUI,MAAC,MAAD;AAAQ,QAAA,OAAO;AAAf,sBAVJ,CADJ;AAcH;;;;EAtCwBT,S;;AAyC7B,eAAeO,cAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport { Form, Input, Message, Button } from 'semantic-ui-react';\r\nimport Campaign from '../ethereum/campaign';\r\nimport web3 from '../ethereum/web3';\r\n\r\n\r\nclass ContributeForm extends Component {\r\n    render () {\r\n\r\n        state = {\r\n            value: ''\r\n        };\r\n        \r\n        onSubmit = async (event) => {\r\n            event.preventDefault();\r\n            const campaign = Campaign(this.props.address);\r\n\r\n            try {\r\n                ethereum.enable();\r\n                const accounts = await web3.eth.getAccounts();\r\n                await campaign.methods.contribute().send({\r\n                    from:accounts[0],\r\n                    value: web3.utils.toWei(this.state.value, 'ether')\r\n                });\r\n\r\n            } catch (err) {\r\n\r\n            }\r\n        };\r\n\r\n        return (\r\n            <Form onSubmit={this.onSubmit}>\r\n                <Form.Field>\r\n                    <label>Amount to contribute</label>\r\n                    <input \r\n                        value={this.state.value}\r\n                        onChange={event => this.setState({value: event.target.value})}\r\n                        label=\"ether\"\r\n                        labelPosition=\"right\"/>\r\n                </Form.Field>\r\n\r\n                <Button primary>Contribute</Button>\r\n            </Form>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ContributeForm;"]},"metadata":{},"sourceType":"module"}